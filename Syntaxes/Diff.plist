{
   name = "Diff";
   scopeName = "source.diff";
   firstLineMatch = "^(Index: |--- |\\*\\*\\* |\\d+(,\\d+)*(a|d|c)\\d+(,\\d+)*$)";
   fileTypes = ( diff, patch );
   uuid = "7E848FF4-708E-11D9-97B4-0011242E4184";
      
   //highlightPairs = ( ("(", ")"), ("[", "]"), ("{", "}") );
   
   
   patterns = (
      
      // sperators:
      {  name = "meta.separator.diff";
         match = "^((\\*{15})|(={67})|(-{3}))$";
      },
      
      
      // the different ways of specifing a range ..
      
      // a 'normal' range, also called 'change command':
      {  name = "meta.range.normal.diff";
         match = "^\\d+(,\\d+)*(a|d|c)\\d+(,\\d+)*$";
      },
      
      // a unified range:
      {  name = "meta.range.unified.diff";
         match = "^@@.+@@$";
      },
      
      // a context range, could be seperated into 2 range types,
      // but i think this just would be overhead. :>
      {  name = "meta.range.context.diff";
         match = "^((\\-{3} .+ \\-{4})|(\\*{3} .+ \\*{4}))$";
      },
      
      
      // headers, the normal format shouldnt have this..
      {  name = "meta.header.from-file.diff";
         match = "^((-{3} .+)|(\\*{3} .+))$";
      },
      
      {  name = "meta.header.to-file.diff";
         match = "^\\+{3} .+$";
      },
      
      
      // how to say 'new', catches normal, unified and context.
      {  name = "inserted.diff";
         match = "^((>( .*)?)|(\\+.*))$";
      },
      
      // just the context format knows changes:
      {  name = "changed.diff";
         match = "^!.*$";
      },
      
      // .. deleted ..
      {  name = "deleted.diff";
         match = "^((<( .*)?)|(-.*))$";
      },
      
      
      // the Index: stuff, afaik just svn does it.
      {  name = "meta.index.diff";
         match = "^Index: .+$";
      }
      
   );
   
}
